#!/bin/bash
#
# Flatpak2AppImage - Generate AppImage using rootfs, based Flatpak
#
# Require:
#   - flatpak
#   - bash >= 4.x
#   - binutils (readelf strip)
#   - coreutils >= 5.93
#   - curl
#   - grep
#   - sed
#   - tar
# Optional:
#   - elfkickers (sstrip)
#
# By Mauricio Ferrari (m10ferrari1200@gmail.com)
#
###############################################################################

test $UID -eq 0 && echo "Please do not run this script with sudo. It should be executed as a regular user." && exit 1

command -v flatpak || {
    echo "Flatpak is required. Please install it using your system's package manager."
    exit 1
}

CWD="$PWD"
set -e

package_name=org.tribler.Tribler
binary_name=  # optional
parms=        # optional

create_appimage=0   # 0 (false) or 1 (true)
use_uruntime=0      # 0 (type2runtime) - 1 (uruntime) - 2 (uruntime-dwarfs)
appimage_dest_dir=  # optional

###############################################################################


test -z "$package_name" && exit 1

binary_name="${binary_name:-"$(: "${package_name##*.}"; echo "${_,,}")"}"

conteiner_rootfs="$CWD/_flatpak_${package_name##*.}_bootstrap"
HOME="$conteiner_rootfs"

tool_dirs="$CWD/tools"
appdir="$CWD/$binary_name.AppDir"

mkdir -pv "$tool_dirs" "$appdir" "$conteiner_rootfs"


# ### DOWNLOAD & CHECK TOOLS ### ###################################################################################### # TODO


apprun="${use_custom_apprun:-"$(
    test "$mode" = "conteiner" && {
        select_apprun="AppRun_bwrap_proot"
        test $use_apprun_type -eq 1 && select_apprun="AppRun_proot"
        true
    } || select_apprun="AppRun_debian"

    printf '%s' "$tool_dirs/$select_apprun"
    test -f "$tool_dirs/$select_apprun" && exit 0
    (
        wget -q --show-progress -O "$tool_dirs/$select_apprun" \
            "https://raw.githubusercontent.com/LinuxDicasPro/ArchAppImage/refs/heads/master/tools/$select_apprun"
    )
)"}"


# ### DOWNLOAD APPIMAGE TOOLS ### #####################################################################################


test -f "$tool_dirs/appimagetool" || {
    wget -q --show-progress -O "$tool_dirs/appimagetool" \
        https://github.com/AppImage/appimagetool/releases/download/continuous/appimagetool-x86_64.AppImage
    chmod -v +x "$tool_dirs/appimagetool"
}

runtime="$(
    case $use_uruntime in
        2)
            str="uruntime-dwarfs"
            url="https://github.com/VHSgunzo/uruntime/releases/download/v0.3.9/uruntime-appimage-dwarfs-x86_64"
            ;;
        1)
            str="uruntime"
            url="https://github.com/VHSgunzo/uruntime/releases/download/v0.3.9/uruntime-appimage-x86_64"
            ;;
        *)
            str="runtime"
            url="https://github.com/AppImage/type2-runtime/releases/download/continuous/runtime-x86_64"
            ;;
    esac

    echo "$tool_dirs/$str"
    test -f "$tool_dirs/$str" && exit 0
    (
        wget -q --show-progress -O "$tool_dirs/$str" "$url"
    )
)"

printf "%-18s %s\n" \
  "use apprun:"        "$apprun" \
  "debootstrap:"       "$debootstrap" \
  "runtime:"           "$runtime"


# ### FUNCTIONS ### ###################################################################################################


function _extra_config
{
    return 0 # ADD EXTRA CONFIG
}

function _create_desktop_file
{
    dname=( ${package_name//-/ })
    desk_name="${dname[@]^}"

    printf \
"[Desktop Entry]
Version=1.0
Type=Application
Name=$desk_name
Comment=$desk_name
Exec=$binary_name
Icon=$package_name
Categories=Utility;
Terminal=true
StartupNotify=true
" > "$appdir/$package_name.desktop"

     wget -q --show-progress -O "$appdir/$package_name.png" \
        https://raw.githubusercontent.com/LinuxDicasPro/ArchAppImage/refs/heads/master/logo.png
}

# ### INSTALL PACKAGES ### ############################################################################################


grep -q flathub <(flatpak remotes) || {
    flatpak remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo
}

flatpak update
flatpak install --user -v --or-update --noninteractive flathub "$package_name"


# ### EXTRACT AUTO DEPENDENCES ### ####################################################################################

