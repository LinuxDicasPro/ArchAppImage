#!/bin/bash
#
# Default AppRun for AppImage
#
# By Mauricio Ferrari (m10ferrari1200@gmail.com)
#
################################################

APPDIR="$(cd "${0%/*}" && echo $PWD)"

#_______________________________________________

# PROGRAM
# - $APPDIR/usr/bin/python3 $APPDIR/usr/bin/scriptpython
# - $APPDIR/usr/bin/bash $APPDIR/usr/bin/scriptshell
# - $APPDIR/usr/bin/programbinary

# LD_LINUX
# - $APPDIR/usr/lib/ld-linux-x86-64.so.2

PROGRAM=
LD_LINUX=

AUTO_INTEGRATION=0
AUTOSTART=0
AUTOSTART_PARM=
DESKTOP=
ICON=

app_libs=
gtk_version=  # 2, 3, 4
qt_version=   # 4, 5, 6

include_system_python=0 # 0 (false) or 1 (true)

#_______________________________________________


if test ${AUTO_INTEGRATION:-0} -eq 1 && command -v grep >/dev/null && command -v sed >/dev/null
then
    local_desktop=~/.local/share/applications
    local_icon=~/.local/share/pixmaps
    local_autostart=~/.config/autostart

    mkdir -p "$local_desktop" "$local_icon" "$local_autostart"

    cp -nv "$APPDIR/$DESKTOP" "$local_desktop"
    cp -nv "$APPDIR/$ICON" "$local_icon"

    if ! grep -q "$APPIMAGE" "$local_desktop/$DESKTOP"
    then
        sed -i "s|Exec=[^ ]*|Exec=${APPIMAGE}|" "$local_desktop/$DESKTOP"
        sed -i "s|Icon=.*|Icon=${ICON%.*}|" "$local_desktop/$DESKTOP"


        if test ${AUTOSTART:-0} -eq 1
        then
            cp -nv "$APPDIR/$DESKTOP" "$local_autostart"

            autoparm=${AUTOSTART_PARM:+" $AUTOSTART_PARM"}
            sed -i "s|Exec=[^ ]*|Exec=${APPIMAGE}${autoparm}|" "$local_autostart/$DESKTOP"
            sed -i "s|Icon=.*|Icon=${ICON%.*}|" "$local_desktop/$DESKTOP"
        fi

        if command -v update-desktop-database >/dev/null
        then
            update-desktop-database -q >/dev/null 2>&1
        fi

        if test -e "usr/share/icons/hicolor/icon-theme.cache" && command -v gtk-update-icon-cache >/dev/null
        then
            gtk-update-icon-cache ~/.local/share/pixmaps/ >/dev/null 2>&1
        fi
    fi
fi


export UNION_PRELOAD="$APPDIR"

shopt -s nullglob extglob

export XDG_DATA_DIRS="$APPDIR/usr/share:/usr/share"
export XDG_CONFIG_DIRS="$APPDIR/etc/xdg:/etc/xdg"

export TEXTDOMAINDIR="$APPDIR/usr/share/locale"
export LOCPATH="$APPDIR/usr/share/locale"

export GSETTINGS_SCHEMA_DIR="$APPDIR/usr/share/glib-2.0/schemas/"

export REQUESTS_CA_BUNDLE=$(i=(/etc/{ssl,pki}/certs/ca-{certificates,bundle}*crt); echo "${i[0]}")

export GCONV_PATH="$(i=($APPDIR*/{,usr/}lib{/,/{i386,x86_64}-linux-gnu/,64/}gconv); echo "${i[0]}")"

export BABL_PATH="$(i=($APPDIR*/{,usr/}lib{/,/{i386,x86_64}-linux-gnu/,64/}babl-*); echo "${i[0]}")"

export GEGL_PATH="$(i=($APPDIR*/{,usr/}lib{/,/{i386,x86_64}-linux-gnu/,64/}gegl-*); echo "${i[0]}")"

export TCL_LIBRARY="$(i=($APPDIR*/{{,usr/}lib{/,/{i386,x86_64}-linux-gnu/,64/},usr/share/}tcl8.6); echo "${i[0]}")"

export TK_LIBRARY="$(i=($APPDIR*/{{,usr/}lib{/,/{i386,x86_64}-linux-gnu/,64/},usr/share/}tk8.6); echo "${i[0]}")"

export GIO_EXTRA_MODULES="$(i=($APPDIR*/{,usr/}lib{/,/{i386,x86_64}-linux-gnu/,64/}gio/modules); echo "${i[0]}")"

export GI_TYPELIB_PATH="$(i=($APPDIR*/{,usr/}lib{/,/{i386,x86_64}-linux-gnu/,64/}girepository-1.0); echo "${i[0]}")"

export JAVA_HOME="$(i=($APPDIR*/{,usr/}lib{/,/{i386,x86_64}-linux-gnu/,64/}{jvm/java*,jdk*}); echo "${i[0]}")"

export GTK_IM_MODULE_FILE="$(i=($APPDIR*/{,usr/}lib{/,/{i386,x86_64}-linux-gnu/,64/}gtk-${gtk_version:-*}.0/*/immodules.cache); echo "${i[0]}")"
export GDK_PIXBUF_MODULEDIR="$(i=($APPDIR*/{,usr/}lib{/,/{i386,x86_64}-linux-gnu/,64/}gdk-pixbuf-2.0/2.10.0/loaders); echo "${i[0]}")"
export GDK_PIXBUF_MODULE_FILE="${GDK_PIXBUF_MODULEDIR:+$GDK_PIXBUF_MODULEDIR.cache}"

export GST_PLUGIN_PATH="$(i=($APPDIR*/{,usr/}lib{/,/{i386,x86_64}-linux-gnu/,64/}gstreamer*1.0); echo "${i[0]}")"
export GST_PLUGIN_SYSTEM_PATH="${GST_PLUGIN_PATH}"
export GST_PLUGIN_SCANNER="${GST_PLUGIN_PATH:+$GST_PLUGIN_PATH/gst-plugin-scanner}"

IFS_BAK=$IFS
IFS=:

export GTK_PATH="$(i=($APPDIR*/{,usr/}lib{/,/{i386,x86_64}-linux-gnu/,64/}gtk-${gtk_version:-*}.0); echo "${i[*]}")"
export PATH="$(i=($APPDIR*/{{,usr/}{,s}bin,usr/{libexec,{,share/}games}}); echo "${i[*]}")"

export LIBRARY_PATH="$(dirs=("${app_libs:-$APPDIR/app/libs}/"{,*/}); echo "${dirs[*]%/}")"
export LIBRARY_PATH=${LIBRARY_PATH}:"$(i=($APPDIR*/{,usr/}lib{/,/{i386,x86_64}-linux-gnu/,64/}{,*/}); echo "${i[*]}")"

export QT_PLUGIN_PATH="$(i=($APPDIR*/{,usr/}lib{/,/{i386,x86_64}-linux-gnu/,64/}qt${qt_version:-*}/{,plugins/{,*/}}); echo "${i[*]}")"

test $include_system_python -eq 0 || SYSTEMPYTHONPATH="$(i=(/{,usr/}lib{/,/{i386,x86_64}-linux-gnu/,64/}python3.*/{,site-packages/*/,*/}); echo "${i[*]%/}")"

export PYTHONPATH="$(i=($APPDIR*/{,usr/}lib{/,/{i386,x86_64}-linux-gnu/,64/}python3.*/{,site-packages/*/,*/}); echo "${i[*]%/}")${SYSTEMPYTHONPATH:+":$SYSTEMPYTHONPATH"}"
export PYTHONHOME="$APPDIR/usr"

export PERL5LIB="$(i=($APPDIR*/{,usr/}lib{/,/{i386,x86_64}-linux-gnu/,64/}perl{,5,-base}/{,*5.*/,*/}{,*/{,*/{,*/{,*/}}}}); echo "${i[*]}")"

export RUBYLIB="$(i=($APPDIR*/{,usr/}lib{/,/{i386,x86_64}-linux-gnu/,64/}ruby/{,*/}); echo "${i[*]}")"
export GEM_PATH="$(i=($APPDIR*/{,usr/}lib{/,/{i386,x86_64}-linux-gnu/,64/}ruby/gems); echo "${i[0]}")"

IFS=$IFS_BAK

shopt -u nullglob extglob

exec "${LD_LINUX:-$APPDIR/lib64/ld-linux-x86-64.so.2}" --inhibit-cache --library-path "${LIBRARY_PATH}" $PROGRAM "$@"
